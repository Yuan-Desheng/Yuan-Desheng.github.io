import{_ as s,c as i,o as e,ae as t}from"./chunks/framework.Dgg8-8ov.js";const o=JSON.parse('{"title":"阶段重点","description":"","frontmatter":{},"headers":[],"relativePath":"React/React 基础/day11/01.阶段重点与环境搭建.md","filePath":"React/React 基础/day11/01.阶段重点与环境搭建.md"}'),n={name:"React/React 基础/day11/01.阶段重点与环境搭建.md"};function p(l,a,h,r,d,c){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="阶段重点" tabindex="-1">阶段重点 <a class="header-anchor" href="#阶段重点" aria-label="Permalink to &quot;阶段重点&quot;">​</a></h1><p>React和TypeScript集合使用的重点集中在 <code>和存储数据/状态有关的Hook函数</code> 以及 <code>组件接口</code> 的位置，这些地方最需要数据类型校验</p><h1 id="使用vite创建项目" tabindex="-1">使用Vite创建项目 <a class="header-anchor" href="#使用vite创建项目" aria-label="Permalink to &quot;使用Vite创建项目&quot;">​</a></h1><blockquote><p>Vite是一个框架无关的前端工具链工具，可以帮助我们快速创建一个 <code>react+ts</code> 的工程化环境出来，我们可以基于它做语法学习</p></blockquote><p><a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-typescript</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-ts</span></span></code></pre></div><h1 id="安装依赖运行项目" tabindex="-1">安装依赖运行项目 <a class="header-anchor" href="#安装依赖运行项目" aria-label="Permalink to &quot;安装依赖运行项目&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div>`,8)]))}const _=s(n,[["render",p]]);export{o as __pageData,_ as default};
